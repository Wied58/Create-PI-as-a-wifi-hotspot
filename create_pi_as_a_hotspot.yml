---
- name: Configure Raspberry Pi as a Wi-Fi Hotspot
  hosts: all
  become: yes
  tasks:
    - name: Install required packages
      apt:
        name:
          - hostapd
          - iw
          - iproute2
          - systemd-resolved
          - iptables-persistent
        state: present
        update_cache: yes

    - name: Unmask and enable hostapd service
      command: systemctl unmask hostapd

    - name: Enable systemd-networkd and systemd-resolved
      systemd:
        name: "{{ item }}"
        enabled: yes
        state: started
      loop:
        - systemd-networkd
        - systemd-resolved

    # Force wlan1 to AP mode
    - name: Disable WPA supplicant for wlan1
      file:
        path: "/etc/systemd/system/wpa_supplicant@wlan1.service"
        state: absent

    - name: Create udev rule for Persistent AP Mode on wlan1
      copy:
        dest: /etc/udev/rules.d/99-wlan1-persistent.rules
        content: |
          SUBSYSTEM=="net", ACTION=="add", ATTR{address}=="40:a5:ef:0c:9a:cd", NAME="wlan1"
          SUBSYSTEM=="net", ACTION=="add", KERNEL=="wlan1", RUN+="/bin/bash -c 'sleep 2; /usr/sbin/iw dev wlan1 set type __ap'"

    - name: Reload udev rules
      command: udevadm control --reload-rules

    - name: Trigger udev rule application
      command: udevadm trigger --subsystem-match=net

    - name: Create systemd service to force wlan1 AP mode at boot
      copy:
        dest: /etc/systemd/system/force-wlan1-ap.service
        content: |
          [Unit]
          Description=Force wlan1 to AP mode
          After=network-pre.target
          Wants=network-pre.target

          [Service]
          Type=oneshot
          ExecStart=/usr/sbin/iw dev wlan1 set type __ap
          RemainAfterExit=yes

          [Install]
          WantedBy=multi-user.target

    - name: Enable and start force-wlan1-ap service
      systemd:
        name: force-wlan1-ap
        enabled: yes
        state: started

    - name: Ensure override directory for hostapd exists
      file:
        path: /etc/systemd/system/hostapd.service.d
        state: directory
        mode: '0755'

    - name: Create systemd override for hostapd to restart when wlan1 appears
      copy:
        dest: /etc/systemd/system/hostapd.service.d/override.conf
        content: |
          [Unit]
          Requires=sys-subsystem-net-devices-wlan1.device
          After=sys-subsystem-net-devices-wlan1.device

    - name: Restart hostapd to apply AP mode
      systemd:
        name: hostapd
        state: restarted

    # Configure wlan0 for internet access
    - name: Configure wlan0 to connect to home Wi-Fi (dhclient)
      copy:
        dest: /etc/systemd/network/25-wlan0.network
        content: |
          [Match]
          Name=wlan0

          [Network]
          DHCP=ipv4

    # Configure wlan1 with a static IP but no DHCP server
    - name: Configure wlan1 with static IP (No DHCP)
      copy:
        dest: /etc/systemd/network/30-wlan1.network
        content: |
          [Match]
          Name=wlan1

          [Network]
          Address=192.168.50.1/24

    - name: Configure hostapd
      copy:
        dest: /etc/hostapd/hostapd.conf
        content: |
          interface=wlan1
          driver=nl80211
          ssid=RaspberryPi-Hotspot
          hw_mode=g
          channel=7
          wmm_enabled=0
          macaddr_acl=0
          auth_algs=1
          ignore_broadcast_ssid=0
          wpa=2
          wpa_passphrase=YourSecurePassword
          wpa_key_mgmt=WPA-PSK
          rsn_pairwise=CCMP

    - name: Set hostapd configuration path
      lineinfile:
        path: /etc/default/hostapd
        regexp: '^#?DAEMON_CONF=' 
        line: 'DAEMON_CONF="/etc/hostapd/hostapd.conf"'

    # Enable NAT
    - name: Enable IP forwarding
      sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        state: present
        sysctl_set: yes
        reload: yes

    - name: Set up NAT for wlan1 to wlan0
      iptables:
        table: nat
        chain: POSTROUTING
        jump: MASQUERADE
        out_interface: wlan0

    - name: Allow forwarding from wlan1 to wlan0
      iptables:
        chain: FORWARD
        in_interface: wlan1
        out_interface: wlan0
        jump: ACCEPT

    - name: Save iptables rules
      command: netfilter-persistent save

    - name: Enable and start services
      systemd:
        name: "{{ item }}"
        enabled: yes
        state: started
      loop:
        - systemd-networkd
        - systemd-resolved
        - hostapd
        - force-wlan1-ap

